{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useFreshCallback } from './useFreshCallback.js';\n\n/**\r\n * useAudio\r\n * @description Audio hook\r\n * @see {@link https://rooks.vercel.app/docs/useAudio}\r\n */\nconst noop = () => {};\nfunction useAudio(options = {}, callbacks = {}) {\n  var _a, _b, _c, _d, _e;\n  const {\n    autoPlay = false,\n    isMuted: initialIsMuted = false\n  } = options;\n  const [isPlaying, setIsPlaying] = useState(autoPlay);\n  const [isMuted, setIsMuted] = useState(initialIsMuted);\n  const [audioNode, setAudioNode] = useState(null);\n  const onPlay = useFreshCallback((_a = callbacks.onPlay) !== null && _a !== void 0 ? _a : noop);\n  const onPause = useFreshCallback((_b = callbacks.onPause) !== null && _b !== void 0 ? _b : noop);\n  const onMute = useFreshCallback((_c = callbacks.onMute) !== null && _c !== void 0 ? _c : noop);\n  const onUnmute = useFreshCallback((_d = callbacks.onUnmute) !== null && _d !== void 0 ? _d : noop);\n  const onLoadedMetadata = useFreshCallback((_e = callbacks.onLoadedMetadata) !== null && _e !== void 0 ? _e : noop);\n  const audioCallbackRef = node => {\n    if (node !== null) {\n      setAudioNode(node);\n    }\n  };\n  useEffect(() => {\n    if (!audioNode) return;\n    if (isPlaying) {\n      audioNode.play();\n    } else {\n      audioNode.pause();\n    }\n  }, [audioNode, isPlaying]);\n  useEffect(() => {\n    if (!audioNode) return;\n    audioNode.muted = isMuted;\n  }, [audioNode, isMuted]);\n  useEffect(() => {\n    if (!audioNode) return;\n    const handleLoadedMetadata = () => {\n      if (autoPlay) {\n        audioNode === null || audioNode === void 0 ? void 0 : audioNode.play();\n      }\n      onLoadedMetadata();\n    };\n    const handlePlay = () => {\n      onPlay();\n    };\n    const handlePause = () => {\n      onPause();\n    };\n    const handleEnded = () => {\n      setIsPlaying(false);\n    };\n    audioNode === null || audioNode === void 0 ? void 0 : audioNode.addEventListener(\"loadedmetadata\", handleLoadedMetadata);\n    audioNode === null || audioNode === void 0 ? void 0 : audioNode.addEventListener(\"play\", handlePlay);\n    audioNode === null || audioNode === void 0 ? void 0 : audioNode.addEventListener(\"pause\", handlePause);\n    audioNode === null || audioNode === void 0 ? void 0 : audioNode.addEventListener(\"ended\", handleEnded);\n    return () => {\n      audioNode === null || audioNode === void 0 ? void 0 : audioNode.removeEventListener(\"loadedmetadata\", handleLoadedMetadata);\n      audioNode === null || audioNode === void 0 ? void 0 : audioNode.removeEventListener(\"play\", handlePlay);\n      audioNode === null || audioNode === void 0 ? void 0 : audioNode.removeEventListener(\"pause\", handlePause);\n      audioNode === null || audioNode === void 0 ? void 0 : audioNode.removeEventListener(\"ended\", handleEnded);\n    };\n  }, [autoPlay, onLoadedMetadata, onPlay, onPause, audioNode]);\n  const play = () => {\n    setIsPlaying(true);\n  };\n  const pause = () => {\n    setIsPlaying(false);\n  };\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const mute = () => {\n    setIsMuted(true);\n    onMute();\n  };\n  const unmute = () => {\n    setIsMuted(false);\n    onUnmute();\n  };\n  const toggleMute = () => {\n    if (isMuted) {\n      unmute();\n    } else {\n      mute();\n    }\n  };\n  const controls = {\n    play,\n    pause,\n    togglePlay,\n    mute,\n    unmute,\n    toggleMute\n  };\n  const state = {\n    isPlaying,\n    isMuted\n  };\n  return [audioCallbackRef, state, controls];\n}\nexport { useAudio };","map":{"version":3,"names":["useState","useEffect","useFreshCallback","noop","useAudio","options","callbacks","_a","_b","_c","_d","_e","autoPlay","isMuted","initialIsMuted","isPlaying","setIsPlaying","setIsMuted","audioNode","setAudioNode","onPlay","onPause","onMute","onUnmute","onLoadedMetadata","audioCallbackRef","node","play","pause","muted","handleLoadedMetadata","handlePlay","handlePause","handleEnded","addEventListener","removeEventListener","togglePlay","mute","unmute","toggleMute","controls","state"],"sources":["/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE/client/node_modules/rooks/dist/esm/hooks/useAudio.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useFreshCallback } from './useFreshCallback.js';\n\n/**\r\n * useAudio\r\n * @description Audio hook\r\n * @see {@link https://rooks.vercel.app/docs/useAudio}\r\n */\r\nconst noop = () => { };\r\nfunction useAudio(options = {}, callbacks = {}) {\r\n    var _a, _b, _c, _d, _e;\r\n    const { autoPlay = false, isMuted: initialIsMuted = false } = options;\r\n    const [isPlaying, setIsPlaying] = useState(autoPlay);\r\n    const [isMuted, setIsMuted] = useState(initialIsMuted);\r\n    const [audioNode, setAudioNode] = useState(null);\r\n    const onPlay = useFreshCallback((_a = callbacks.onPlay) !== null && _a !== void 0 ? _a : noop);\r\n    const onPause = useFreshCallback((_b = callbacks.onPause) !== null && _b !== void 0 ? _b : noop);\r\n    const onMute = useFreshCallback((_c = callbacks.onMute) !== null && _c !== void 0 ? _c : noop);\r\n    const onUnmute = useFreshCallback((_d = callbacks.onUnmute) !== null && _d !== void 0 ? _d : noop);\r\n    const onLoadedMetadata = useFreshCallback((_e = callbacks.onLoadedMetadata) !== null && _e !== void 0 ? _e : noop);\r\n    const audioCallbackRef = (node) => {\r\n        if (node !== null) {\r\n            setAudioNode(node);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (!audioNode)\r\n            return;\r\n        if (isPlaying) {\r\n            audioNode.play();\r\n        }\r\n        else {\r\n            audioNode.pause();\r\n        }\r\n    }, [audioNode, isPlaying]);\r\n    useEffect(() => {\r\n        if (!audioNode)\r\n            return;\r\n        audioNode.muted = isMuted;\r\n    }, [audioNode, isMuted]);\r\n    useEffect(() => {\r\n        if (!audioNode)\r\n            return;\r\n        const handleLoadedMetadata = () => {\r\n            if (autoPlay) {\r\n                audioNode === null || audioNode === void 0 ? void 0 : audioNode.play();\r\n            }\r\n            onLoadedMetadata();\r\n        };\r\n        const handlePlay = () => {\r\n            onPlay();\r\n        };\r\n        const handlePause = () => {\r\n            onPause();\r\n        };\r\n        const handleEnded = () => {\r\n            setIsPlaying(false);\r\n        };\r\n        audioNode === null || audioNode === void 0 ? void 0 : audioNode.addEventListener(\"loadedmetadata\", handleLoadedMetadata);\r\n        audioNode === null || audioNode === void 0 ? void 0 : audioNode.addEventListener(\"play\", handlePlay);\r\n        audioNode === null || audioNode === void 0 ? void 0 : audioNode.addEventListener(\"pause\", handlePause);\r\n        audioNode === null || audioNode === void 0 ? void 0 : audioNode.addEventListener(\"ended\", handleEnded);\r\n        return () => {\r\n            audioNode === null || audioNode === void 0 ? void 0 : audioNode.removeEventListener(\"loadedmetadata\", handleLoadedMetadata);\r\n            audioNode === null || audioNode === void 0 ? void 0 : audioNode.removeEventListener(\"play\", handlePlay);\r\n            audioNode === null || audioNode === void 0 ? void 0 : audioNode.removeEventListener(\"pause\", handlePause);\r\n            audioNode === null || audioNode === void 0 ? void 0 : audioNode.removeEventListener(\"ended\", handleEnded);\r\n        };\r\n    }, [autoPlay, onLoadedMetadata, onPlay, onPause, audioNode]);\r\n    const play = () => {\r\n        setIsPlaying(true);\r\n    };\r\n    const pause = () => {\r\n        setIsPlaying(false);\r\n    };\r\n    const togglePlay = () => {\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n    const mute = () => {\r\n        setIsMuted(true);\r\n        onMute();\r\n    };\r\n    const unmute = () => {\r\n        setIsMuted(false);\r\n        onUnmute();\r\n    };\r\n    const toggleMute = () => {\r\n        if (isMuted) {\r\n            unmute();\r\n        }\r\n        else {\r\n            mute();\r\n        }\r\n    };\r\n    const controls = {\r\n        play,\r\n        pause,\r\n        togglePlay,\r\n        mute,\r\n        unmute,\r\n        toggleMute,\r\n    };\r\n    const state = {\r\n        isPlaying,\r\n        isMuted,\r\n    };\r\n    return [audioCallbackRef, state, controls];\r\n}\n\nexport { useAudio };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}