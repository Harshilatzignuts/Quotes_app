{"ast":null,"code":"var _jsxFileName = \"/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { FormControl, FormLabel, Input, Badge, Button, useDisclosure, Drawer, DrawerBody, DrawerOverlay, DrawerContent, DrawerCloseButton, DrawerHeader, DrawerFooter, Avatar, Text } from \"@chakra-ui/react\";\nimport { Card, CardHeader, CardBody, Flex, Box, Container, Image } from \"@chakra-ui/react\";\nimport \"./Pages.style.css\";\nimport QuotesImage from \"../assets/quotes-bg.jpg\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport ChakraCarousel from \"./ChakraCarousel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [quotes, setQuotes] = useState([]);\n  const [tempQuote, setTempQuote] = useState(\"\");\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [users, setUsers] = useState([]);\n  const [selectedUserQuotes, setSelectedUserQuotes] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const btnRef = React.useRef();\n  const currentUserEmail = localStorage.getItem(\"currentUser\");\n  const currentUser = JSON.parse(localStorage.getItem(\"currentUserData\")).user;\n  console.log(currentUser);\n  async function populateQuote() {\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setQuotes(response.quotes);\n    } else {\n      alert(response.error);\n    }\n  }\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwtDecode(token);\n      if (!user) {\n        navigate(\"/login\");\n        localStorage.removeItem(\"token\");\n      } else {\n        populateQuote();\n      }\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n  async function createQuote(event) {\n    event.preventDefault();\n    const newQuote = tempQuote.trim();\n\n    // Check if the new quote already exists\n    if (quotes.includes(newQuote)) {\n      alert(\"Duplicate quote. Please enter a different quote.\");\n      return;\n    }\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        quote: newQuote\n      })\n    });\n    const response = await data.json();\n    console.log(response.status);\n    if (response.status === \"ok\") {\n      setTempQuote(\"\");\n      setQuotes([newQuote, ...quotes]); // Add the new quote to the beginning of the array\n    } else {\n      alert(response.error);\n    }\n  }\n  async function editQuote(index) {\n    const currentQuote = quotes[index];\n    const newQuote = prompt(\"Enter new quote\", currentQuote);\n    if (newQuote !== null && newQuote.trim() !== \"\") {\n      // Check if the edited quote already exists\n      if (quotes.includes(newQuote)) {\n        alert(\"Duplicate quote. Please enter a different quote.\");\n        return;\n      }\n      const updatedQuotes = [...quotes];\n      updatedQuotes[index] = newQuote;\n\n      // Move the edited quote to the front of the array\n      updatedQuotes.unshift(updatedQuotes.splice(index, 1)[0]);\n\n      // Make API request to update the quotes on the server\n      const data = await fetch(\"http://localhost:1337/api/quote\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          quotes: updatedQuotes\n        })\n      });\n      const response = await data.json();\n      if (response.status === \"ok\") {\n        setQuotes(updatedQuotes);\n      } else {\n        alert(response.error);\n      }\n    } else if (newQuote !== null) {\n      // Show an alert if the user entered an empty quote\n      alert(\"Please enter a non-empty quote.\");\n    }\n  }\n  async function deleteQuote(index) {\n    const updatedQuotes = [...quotes];\n    updatedQuotes.splice(index, 1);\n\n    // Make API request to update the quotes on the server\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        quotes: updatedQuotes\n      })\n    });\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setQuotes(updatedQuotes);\n    } else {\n      alert(response.error);\n    }\n  }\n  function handleLogout() {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  }\n  const property = {\n    imageUrl: QuotesImage,\n    imageAlt: quotes,\n    imageWidth: \"100%\",\n    title: quotes\n  };\n\n  // find users\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const data = await fetch(\"http://localhost:1337/api/users\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        }\n      });\n      const response = await data.json();\n      if (response.status === \"ok\") {\n        // Filter out the current user from the list of all users\n        const filteredUsers = response.users.filter(user => user.email !== currentUserEmail);\n        setUsers(filteredUsers);\n      } else {\n        alert(response.error);\n      }\n    }\n    fetchUsers();\n  }, []);\n  async function fetchUserQuotes(user) {\n    const data = await fetch(`http://localhost:1337/api/quote/${user.email}`, {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setSelectedUserQuotes(response.quotes);\n    } else {\n      alert(response.error);\n    }\n  }\n  function handleUserClick(user) {\n    setSelectedUser(user);\n    fetchUserQuotes(user);\n  }\n  function handleClose() {\n    setSelectedUser(\"\");\n    setSelectedUserQuotes(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header_main\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        ref: btnRef,\n        colorScheme: \"teal\",\n        onClick: onOpen,\n        children: currentUser.token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"https://bit.ly/sage-adebayo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          ml: \"3\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              ml: \"1\",\n              colorScheme: \"green\",\n              children: \"New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            fontSize: \"sm\",\n            children: currentUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isOpen,\n      placement: \"right\",\n      onClose: onClose,\n      finalFocusRef: btnRef,\n      children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerHeader, {\n          children: \"These are all using this app to create Quotes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          children: [users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleUserClick(user),\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              mb: 4,\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                name: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                ml: \"3\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: \"bold\",\n                  children: [user.name, /*#__PURE__*/_jsxDEV(Badge, {\n                    ml: \"1\",\n                    colorScheme: \"green\",\n                    children: [\"Quote : \", user.quotes.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)), users.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No users found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            mr: 3,\n            onClick: () => {\n              onClose();\n              handleClose();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"6xl\",\n      color: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-page\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  color: \"black\"\n                },\n                children: \"Create Quote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleLogout,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            pt: 0,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: createQuote,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Quote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"quote\",\n                  value: tempQuote,\n                  onChange: e => setTempQuote(e.target.value),\n                  id: \"quote\",\n                  placeholder: \"Enter your quote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                value: \"Get Quote\",\n                mt: 2,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                colorScheme: \"teal\",\n                children: \"Get Quote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), selectedUser && selectedUserQuotes.length > 0 ? /*#__PURE__*/_jsxDEV(Card, {\n        className: \"quotes-cards\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [selectedUser.name, \" Number of Quotes:\", \" \", selectedUserQuotes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(ChakraCarousel, {\n            gap: 32,\n            children: selectedUserQuotes.map((quote, index) => /*#__PURE__*/_jsxDEV(Flex, {\n              boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\",\n              justifyContent: \"space-between\",\n              flexDirection: \"column\",\n              overflow: \"hidden\",\n              bg: \"base.d100\",\n              rounded: 5,\n              flex: 1,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                maxW: \"100%\",\n                borderWidth: \"1px\",\n                borderRadius: \"lg\",\n                overflow: \"hidden\",\n                className: \"image-box\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  src: property.imageUrl,\n                  alt: quote,\n                  width: \"100%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  p: \"6\",\n                  className: \"Quotes\",\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mt: \"1\",\n                    fontWeight: \"semibold\",\n                    as: \"h4\",\n                    lineHeight: \"tight\",\n                    noOfLines: 3,\n                    children: quote\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-container\",\n                  children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                    onClick: () => editQuote(index),\n                    w: 8,\n                    h: 8,\n                    color: \"teal.500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    onClick: () => deleteQuote(index),\n                    w: 8,\n                    h: 8,\n                    color: \"teal.500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Card, {\n        className: \"quotes-cards\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Your Number of Quotes: \", quotes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(ChakraCarousel, {\n            gap: 32,\n            children: quotes.map((quote, index) => /*#__PURE__*/_jsxDEV(Flex, {\n              boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\",\n              justifyContent: \"space-between\",\n              flexDirection: \"column\",\n              overflow: \"hidden\",\n              bg: \"base.d100\",\n              rounded: 5,\n              flex: 1,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                maxW: \"100%\",\n                borderWidth: \"1px\",\n                borderRadius: \"lg\",\n                overflow: \"hidden\",\n                className: \"image-box\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  src: property.imageUrl,\n                  alt: quote,\n                  width: \"100%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  p: \"6\",\n                  className: \"Quotes\",\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mt: \"1\",\n                    fontWeight: \"semibold\",\n                    as: \"h4\",\n                    lineHeight: \"tight\",\n                    noOfLines: 3,\n                    children: quote\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-container\",\n                  children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                    onClick: () => editQuote(index),\n                    w: 8,\n                    h: 8,\n                    color: \"teal.500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    onClick: () => deleteQuote(index),\n                    w: 8,\n                    h: 8,\n                    color: \"teal.500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"7ibP+CKcvUuUcg4/ZQrs3b/iLa4=\", false, function () {\n  return [useNavigate, useDisclosure];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jwtDecode","FormControl","FormLabel","Input","Badge","Button","useDisclosure","Drawer","DrawerBody","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerFooter","Avatar","Text","Card","CardHeader","CardBody","Flex","Box","Container","Image","QuotesImage","DeleteIcon","EditIcon","ChakraCarousel","jsxDEV","_jsxDEV","Dashboard","_s","navigate","quotes","setQuotes","tempQuote","setTempQuote","isOpen","onOpen","onClose","users","setUsers","selectedUserQuotes","setSelectedUserQuotes","selectedUser","setSelectedUser","btnRef","useRef","currentUserEmail","localStorage","getItem","currentUser","JSON","parse","user","console","log","populateQuote","data","fetch","method","headers","response","json","status","alert","error","token","removeItem","createQuote","event","preventDefault","newQuote","trim","includes","body","stringify","quote","editQuote","index","currentQuote","prompt","updatedQuotes","unshift","splice","deleteQuote","handleLogout","property","imageUrl","imageAlt","imageWidth","title","fetchUsers","filteredUsers","filter","email","fetchUserQuotes","handleUserClick","handleClose","children","className","ref","colorScheme","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","ml","fontWeight","fontSize","placement","finalFocusRef","map","mb","name","length","variant","mr","maxW","color","style","pt","onSubmit","type","value","onChange","e","target","id","placeholder","mt","alignItems","justifyContent","gap","boxShadow","flexDirection","overflow","bg","rounded","flex","borderWidth","borderRadius","alt","width","p","as","lineHeight","noOfLines","w","h","_c","$RefreshReg$"],"sources":["/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Badge,\n  Button,\n  useDisclosure,\n  Drawer,\n  DrawerBody,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerFooter,\n  Avatar,\n  Text,\n} from \"@chakra-ui/react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Box,\n  Container,\n  Image,\n} from \"@chakra-ui/react\";\nimport \"./Pages.style.css\";\nimport QuotesImage from \"../assets/quotes-bg.jpg\";\n\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\n\nimport ChakraCarousel from \"./ChakraCarousel\";\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n\n  const [quotes, setQuotes] = useState([]);\n\n  const [tempQuote, setTempQuote] = useState(\"\");\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [users, setUsers] = useState([]);\n\n  const [selectedUserQuotes, setSelectedUserQuotes] = useState([]);\n\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  const btnRef = React.useRef();\n\n  const currentUserEmail = localStorage.getItem(\"currentUser\");\n\n  const currentUser = JSON.parse(localStorage.getItem(\"currentUserData\")).user;\n\n  console.log(currentUser);\n  async function populateQuote() {\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const response = await data.json();\n\n    if (response.status === \"ok\") {\n      setQuotes(response.quotes);\n    } else {\n      alert(response.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = jwtDecode(token);\n\n      if (!user) {\n        navigate(\"/login\");\n        localStorage.removeItem(\"token\");\n      } else {\n        populateQuote();\n      }\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n\n  async function createQuote(event) {\n    event.preventDefault();\n    const newQuote = tempQuote.trim();\n\n    // Check if the new quote already exists\n    if (quotes.includes(newQuote)) {\n      alert(\"Duplicate quote. Please enter a different quote.\");\n      return;\n    }\n\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        quote: newQuote,\n      }),\n    });\n\n    const response = await data.json();\n    console.log(response.status);\n    if (response.status === \"ok\") {\n      setTempQuote(\"\");\n      setQuotes([newQuote, ...quotes]); // Add the new quote to the beginning of the array\n    } else {\n      alert(response.error);\n    }\n  }\n\n  async function editQuote(index) {\n    const currentQuote = quotes[index];\n    const newQuote = prompt(\"Enter new quote\", currentQuote);\n\n    if (newQuote !== null && newQuote.trim() !== \"\") {\n      // Check if the edited quote already exists\n      if (quotes.includes(newQuote)) {\n        alert(\"Duplicate quote. Please enter a different quote.\");\n        return;\n      }\n\n      const updatedQuotes = [...quotes];\n      updatedQuotes[index] = newQuote;\n\n      // Move the edited quote to the front of the array\n      updatedQuotes.unshift(updatedQuotes.splice(index, 1)[0]);\n\n      // Make API request to update the quotes on the server\n      const data = await fetch(\"http://localhost:1337/api/quote\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          quotes: updatedQuotes,\n        }),\n      });\n\n      const response = await data.json();\n      if (response.status === \"ok\") {\n        setQuotes(updatedQuotes);\n      } else {\n        alert(response.error);\n      }\n    } else if (newQuote !== null) {\n      // Show an alert if the user entered an empty quote\n      alert(\"Please enter a non-empty quote.\");\n    }\n  }\n\n  async function deleteQuote(index) {\n    const updatedQuotes = [...quotes];\n    updatedQuotes.splice(index, 1);\n\n    // Make API request to update the quotes on the server\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        quotes: updatedQuotes,\n      }),\n    });\n\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setQuotes(updatedQuotes);\n    } else {\n      alert(response.error);\n    }\n  }\n\n  function handleLogout() {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  }\n\n  const property = {\n    imageUrl: QuotesImage,\n    imageAlt: quotes,\n    imageWidth: \"100%\",\n    title: quotes,\n  };\n\n  // find users\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const data = await fetch(\"http://localhost:1337/api/users\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      });\n\n      const response = await data.json();\n\n      if (response.status === \"ok\") {\n        // Filter out the current user from the list of all users\n        const filteredUsers = response.users.filter(\n          (user) => user.email !== currentUserEmail\n        );\n\n        setUsers(filteredUsers);\n      } else {\n        alert(response.error);\n      }\n    }\n\n    fetchUsers();\n  }, []);\n\n  async function fetchUserQuotes(user) {\n    const data = await fetch(`http://localhost:1337/api/quote/${user.email}`, {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const response = await data.json();\n\n    if (response.status === \"ok\") {\n      setSelectedUserQuotes(response.quotes);\n    } else {\n      alert(response.error);\n    }\n  }\n\n  function handleUserClick(user) {\n    setSelectedUser(user);\n\n    fetchUserQuotes(user);\n  }\n\n  function handleClose() {\n    setSelectedUser(\"\");\n    setSelectedUserQuotes(\"\");\n  }\n  return (\n    <div>\n      <div className=\"header_main\">\n        <Button ref={btnRef} colorScheme=\"teal\" onClick={onOpen}>\n          {currentUser.token}\n        </Button>\n        <Flex>\n          <Avatar src=\"https://bit.ly/sage-adebayo\" />\n          <Box ml=\"3\">\n            <Text fontWeight=\"bold\">\n              <Badge ml=\"1\" colorScheme=\"green\">\n                New\n              </Badge>\n            </Text>\n            <Text fontWeight=\"bold\" fontSize=\"sm\">\n              {currentUser.email}\n            </Text>\n          </Box>\n        </Flex>\n      </div>\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>\n            These are all using this app to create Quotes:\n          </DrawerHeader>\n\n          <DrawerBody>\n            {users.map((user, index) => (\n              <div key={index} onClick={() => handleUserClick(user)}>\n                <Flex mb={4} key={index}>\n                  <Avatar name={user.name} />\n                  <Box ml=\"3\">\n                    <Text fontWeight=\"bold\">\n                      {user.name}\n                      <Badge ml=\"1\" colorScheme=\"green\">\n                        Quote : {user.quotes.length}\n                      </Badge>\n                    </Text>\n                    <Text fontSize=\"sm\">{user.email}</Text>\n                  </Box>\n                </Flex>\n              </div>\n            ))}\n            {users.length === 0 && <p>No users found</p>}\n          </DrawerBody>\n\n          <DrawerFooter>\n            <Button\n              variant=\"outline\"\n              mr={3}\n              onClick={() => {\n                onClose();\n                handleClose();\n              }}\n            >\n              Cancel\n            </Button>\n            <Button colorScheme=\"blue\">Save</Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n      <Container maxW=\"6xl\" color=\"white\">\n        <div className=\"inner-page\">\n          <Card>\n            <CardHeader>\n              <div className=\"header\">\n                <h1 style={{ color: \"black\" }}>Create Quote</h1>\n                <Button onClick={handleLogout}>Logout</Button>\n              </div>\n            </CardHeader>\n            <CardBody pt={0}>\n              <form onSubmit={createQuote}>\n                <FormControl>\n                  <FormLabel>Quote</FormLabel>\n                  <Input\n                    type=\"text\"\n                    name=\"quote\"\n                    value={tempQuote}\n                    onChange={(e) => setTempQuote(e.target.value)}\n                    id=\"quote\"\n                    placeholder=\"Enter your quote\"\n                  />\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  value=\"Get Quote\"\n                  mt={2}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  colorScheme=\"teal\"\n                >\n                  Get Quote\n                </Button>\n              </form>\n            </CardBody>\n          </Card>\n        </div>\n        {selectedUser && selectedUserQuotes.length > 0 ? (\n          <Card className=\"quotes-cards\">\n            <CardHeader>\n              <h1>\n                {selectedUser.name} Number of Quotes:{\" \"}\n                {selectedUserQuotes.length}\n              </h1>\n            </CardHeader>\n            <CardBody>\n              <ChakraCarousel gap={32}>\n                {selectedUserQuotes.map((quote, index) => (\n                  <Flex\n                    key={index}\n                    boxShadow=\"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\"\n                    justifyContent=\"space-between\"\n                    flexDirection=\"column\"\n                    overflow=\"hidden\"\n                    bg=\"base.d100\"\n                    rounded={5}\n                    flex={1}\n                  >\n                    <Box\n                      maxW=\"100%\"\n                      borderWidth=\"1px\"\n                      borderRadius=\"lg\"\n                      overflow=\"hidden\"\n                      className=\"image-box\"\n                    >\n                      <Image src={property.imageUrl} alt={quote} width=\"100%\" />\n\n                      <Box p=\"6\" className=\"Quotes\">\n                        <Box\n                          mt=\"1\"\n                          fontWeight=\"semibold\"\n                          as=\"h4\"\n                          lineHeight=\"tight\"\n                          noOfLines={3}\n                        >\n                          {quote}\n                        </Box>\n                      </Box>\n                      <div className=\"btn-container\">\n                        <EditIcon\n                          onClick={() => editQuote(index)}\n                          w={8}\n                          h={8}\n                          color=\"teal.500\"\n                        />\n\n                        <DeleteIcon\n                          onClick={() => deleteQuote(index)}\n                          w={8}\n                          h={8}\n                          color=\"teal.500\"\n                        />\n                      </div>\n                    </Box>\n                  </Flex>\n                ))}\n              </ChakraCarousel>\n            </CardBody>\n          </Card>\n        ) : (\n          <Card className=\"quotes-cards\">\n            <CardHeader>\n              <h1>Your Number of Quotes: {quotes.length}</h1>\n            </CardHeader>\n            <CardBody>\n              <ChakraCarousel gap={32}>\n                {quotes.map((quote, index) => (\n                  <Flex\n                    key={index}\n                    boxShadow=\"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\"\n                    justifyContent=\"space-between\"\n                    flexDirection=\"column\"\n                    overflow=\"hidden\"\n                    bg=\"base.d100\"\n                    rounded={5}\n                    flex={1}\n                  >\n                    <Box\n                      maxW=\"100%\"\n                      borderWidth=\"1px\"\n                      borderRadius=\"lg\"\n                      overflow=\"hidden\"\n                      className=\"image-box\"\n                    >\n                      <Image src={property.imageUrl} alt={quote} width=\"100%\" />\n\n                      <Box p=\"6\" className=\"Quotes\">\n                        <Box\n                          mt=\"1\"\n                          fontWeight=\"semibold\"\n                          as=\"h4\"\n                          lineHeight=\"tight\"\n                          noOfLines={3}\n                        >\n                          {quote}\n                        </Box>\n                      </Box>\n                      <div className=\"btn-container\">\n                        <EditIcon\n                          onClick={() => editQuote(index)}\n                          w={8}\n                          h={8}\n                          color=\"teal.500\"\n                        />\n\n                        <DeleteIcon\n                          onClick={() => deleteQuote(index)}\n                          w={8}\n                          h={8}\n                          color=\"teal.500\"\n                        />\n                      </div>\n                    </Box>\n                  </Flex>\n                ))}\n              </ChakraCarousel>\n            </CardBody>\n          </Card>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SACEC,WAAW,EACXC,SAAS,EACTC,KAAK,EACLC,KAAK,EACLC,MAAM,EACNC,aAAa,EACbC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,iBAAiB,EACjBC,YAAY,EACZC,YAAY,EACZC,MAAM,EACNC,IAAI,QACC,kBAAkB;AACzB,SACEC,IAAI,EACJC,UAAU,EACVC,QAAQ,EACRC,IAAI,EACJC,GAAG,EACHC,SAAS,EACTC,KAAK,QACA,kBAAkB;AACzB,OAAO,mBAAmB;AAC1B,OAAOC,WAAW,MAAM,yBAAyB;AAEjD,SAASC,UAAU,EAAEC,QAAQ,QAAQ,kBAAkB;AAEvD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGhC,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM;IAAEsC,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGhC,aAAa,CAAC,CAAC;EAEnD,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAAC2C,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAM,CAAC6C,YAAY,EAAEC,eAAe,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAM+C,MAAM,GAAGjD,KAAK,CAACkD,MAAM,CAAC,CAAC;EAE7B,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAE5D,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAACI,IAAI;EAE5EC,OAAO,CAACC,GAAG,CAACL,WAAW,CAAC;EACxB,eAAeM,aAAaA,CAAA,EAAG;IAC7B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC1DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,gBAAgB,EAAEZ,YAAY,CAACC,OAAO,CAAC,OAAO;MAChD;IACF,CAAC,CAAC;IAEF,MAAMY,QAAQ,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IAElC,IAAID,QAAQ,CAACE,MAAM,KAAK,IAAI,EAAE;MAC5B9B,SAAS,CAAC4B,QAAQ,CAAC7B,MAAM,CAAC;IAC5B,CAAC,MAAM;MACLgC,KAAK,CAACH,QAAQ,CAACI,KAAK,CAAC;IACvB;EACF;EAEApE,SAAS,CAAC,MAAM;IACd,MAAMqE,KAAK,GAAGlB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIiB,KAAK,EAAE;MACT,MAAMb,IAAI,GAAGrD,SAAS,CAACkE,KAAK,CAAC;MAE7B,IAAI,CAACb,IAAI,EAAE;QACTtB,QAAQ,CAAC,QAAQ,CAAC;QAClBiB,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAClC,CAAC,MAAM;QACLX,aAAa,CAAC,CAAC;MACjB;IACF,CAAC,MAAM;MACLzB,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeqC,WAAWA,CAACC,KAAK,EAAE;IAChCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAGrC,SAAS,CAACsC,IAAI,CAAC,CAAC;;IAEjC;IACA,IAAIxC,MAAM,CAACyC,QAAQ,CAACF,QAAQ,CAAC,EAAE;MAC7BP,KAAK,CAAC,kDAAkD,CAAC;MACzD;IACF;IAEA,MAAMP,IAAI,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,gBAAgB,EAAEZ,YAAY,CAACC,OAAO,CAAC,OAAO;MAChD,CAAC;MACDyB,IAAI,EAAEvB,IAAI,CAACwB,SAAS,CAAC;QACnBC,KAAK,EAAEL;MACT,CAAC;IACH,CAAC,CAAC;IAEF,MAAMV,QAAQ,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IAClCR,OAAO,CAACC,GAAG,CAACM,QAAQ,CAACE,MAAM,CAAC;IAC5B,IAAIF,QAAQ,CAACE,MAAM,KAAK,IAAI,EAAE;MAC5B5B,YAAY,CAAC,EAAE,CAAC;MAChBF,SAAS,CAAC,CAACsC,QAAQ,EAAE,GAAGvC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,MAAM;MACLgC,KAAK,CAACH,QAAQ,CAACI,KAAK,CAAC;IACvB;EACF;EAEA,eAAeY,SAASA,CAACC,KAAK,EAAE;IAC9B,MAAMC,YAAY,GAAG/C,MAAM,CAAC8C,KAAK,CAAC;IAClC,MAAMP,QAAQ,GAAGS,MAAM,CAAC,iBAAiB,EAAED,YAAY,CAAC;IAExD,IAAIR,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC/C;MACA,IAAIxC,MAAM,CAACyC,QAAQ,CAACF,QAAQ,CAAC,EAAE;QAC7BP,KAAK,CAAC,kDAAkD,CAAC;QACzD;MACF;MAEA,MAAMiB,aAAa,GAAG,CAAC,GAAGjD,MAAM,CAAC;MACjCiD,aAAa,CAACH,KAAK,CAAC,GAAGP,QAAQ;;MAE/B;MACAU,aAAa,CAACC,OAAO,CAACD,aAAa,CAACE,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAExD;MACA,MAAMrB,IAAI,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC1DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,gBAAgB,EAAEZ,YAAY,CAACC,OAAO,CAAC,OAAO;QAChD,CAAC;QACDyB,IAAI,EAAEvB,IAAI,CAACwB,SAAS,CAAC;UACnB3C,MAAM,EAAEiD;QACV,CAAC;MACH,CAAC,CAAC;MAEF,MAAMpB,QAAQ,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAClC,IAAID,QAAQ,CAACE,MAAM,KAAK,IAAI,EAAE;QAC5B9B,SAAS,CAACgD,aAAa,CAAC;MAC1B,CAAC,MAAM;QACLjB,KAAK,CAACH,QAAQ,CAACI,KAAK,CAAC;MACvB;IACF,CAAC,MAAM,IAAIM,QAAQ,KAAK,IAAI,EAAE;MAC5B;MACAP,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF;EAEA,eAAeoB,WAAWA,CAACN,KAAK,EAAE;IAChC,MAAMG,aAAa,GAAG,CAAC,GAAGjD,MAAM,CAAC;IACjCiD,aAAa,CAACE,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;;IAE9B;IACA,MAAMrB,IAAI,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC1DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,gBAAgB,EAAEZ,YAAY,CAACC,OAAO,CAAC,OAAO;MAChD,CAAC;MACDyB,IAAI,EAAEvB,IAAI,CAACwB,SAAS,CAAC;QACnB3C,MAAM,EAAEiD;MACV,CAAC;IACH,CAAC,CAAC;IAEF,MAAMpB,QAAQ,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IAClC,IAAID,QAAQ,CAACE,MAAM,KAAK,IAAI,EAAE;MAC5B9B,SAAS,CAACgD,aAAa,CAAC;IAC1B,CAAC,MAAM;MACLjB,KAAK,CAACH,QAAQ,CAACI,KAAK,CAAC;IACvB;EACF;EAEA,SAASoB,YAAYA,CAAA,EAAG;IACtBrC,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;IAChCpC,QAAQ,CAAC,QAAQ,CAAC;EACpB;EAEA,MAAMuD,QAAQ,GAAG;IACfC,QAAQ,EAAEhE,WAAW;IACrBiE,QAAQ,EAAExD,MAAM;IAChByD,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE1D;EACT,CAAC;;EAED;;EAEAnC,SAAS,CAAC,MAAM;IACd,eAAe8F,UAAUA,CAAA,EAAG;MAC1B,MAAMlC,IAAI,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC1DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EAAEZ,YAAY,CAACC,OAAO,CAAC,OAAO;QAChD;MACF,CAAC,CAAC;MAEF,MAAMY,QAAQ,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAElC,IAAID,QAAQ,CAACE,MAAM,KAAK,IAAI,EAAE;QAC5B;QACA,MAAM6B,aAAa,GAAG/B,QAAQ,CAACtB,KAAK,CAACsD,MAAM,CACxCxC,IAAI,IAAKA,IAAI,CAACyC,KAAK,KAAK/C,gBAC3B,CAAC;QAEDP,QAAQ,CAACoD,aAAa,CAAC;MACzB,CAAC,MAAM;QACL5B,KAAK,CAACH,QAAQ,CAACI,KAAK,CAAC;MACvB;IACF;IAEA0B,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeI,eAAeA,CAAC1C,IAAI,EAAE;IACnC,MAAMI,IAAI,GAAG,MAAMC,KAAK,CAAE,mCAAkCL,IAAI,CAACyC,KAAM,EAAC,EAAE;MACxEnC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,gBAAgB,EAAEZ,YAAY,CAACC,OAAO,CAAC,OAAO;MAChD;IACF,CAAC,CAAC;IAEF,MAAMY,QAAQ,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IAElC,IAAID,QAAQ,CAACE,MAAM,KAAK,IAAI,EAAE;MAC5BrB,qBAAqB,CAACmB,QAAQ,CAAC7B,MAAM,CAAC;IACxC,CAAC,MAAM;MACLgC,KAAK,CAACH,QAAQ,CAACI,KAAK,CAAC;IACvB;EACF;EAEA,SAAS+B,eAAeA,CAAC3C,IAAI,EAAE;IAC7BT,eAAe,CAACS,IAAI,CAAC;IAErB0C,eAAe,CAAC1C,IAAI,CAAC;EACvB;EAEA,SAAS4C,WAAWA,CAAA,EAAG;IACrBrD,eAAe,CAAC,EAAE,CAAC;IACnBF,qBAAqB,CAAC,EAAE,CAAC;EAC3B;EACA,oBACEd,OAAA;IAAAsE,QAAA,gBACEtE,OAAA;MAAKuE,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC1BtE,OAAA,CAACvB,MAAM;QAAC+F,GAAG,EAAEvD,MAAO;QAACwD,WAAW,EAAC,MAAM;QAACC,OAAO,EAAEjE,MAAO;QAAA6D,QAAA,EACrDhD,WAAW,CAACgB;MAAK;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACT9E,OAAA,CAACT,IAAI;QAAA+E,QAAA,gBACHtE,OAAA,CAACd,MAAM;UAAC6F,GAAG,EAAC;QAA6B;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5C9E,OAAA,CAACR,GAAG;UAACwF,EAAE,EAAC,GAAG;UAAAV,QAAA,gBACTtE,OAAA,CAACb,IAAI;YAAC8F,UAAU,EAAC,MAAM;YAAAX,QAAA,eACrBtE,OAAA,CAACxB,KAAK;cAACwG,EAAE,EAAC,GAAG;cAACP,WAAW,EAAC,OAAO;cAAAH,QAAA,EAAC;YAElC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACP9E,OAAA,CAACb,IAAI;YAAC8F,UAAU,EAAC,MAAM;YAACC,QAAQ,EAAC,IAAI;YAAAZ,QAAA,EAClChD,WAAW,CAAC4C;UAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACN9E,OAAA,CAACrB,MAAM;MACL6B,MAAM,EAAEA,MAAO;MACf2E,SAAS,EAAC,OAAO;MACjBzE,OAAO,EAAEA,OAAQ;MACjB0E,aAAa,EAAEnE,MAAO;MAAAqD,QAAA,gBAEtBtE,OAAA,CAACnB,aAAa;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjB9E,OAAA,CAAClB,aAAa;QAAAwF,QAAA,gBACZtE,OAAA,CAACjB,iBAAiB;UAAA4F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrB9E,OAAA,CAAChB,YAAY;UAAAsF,QAAA,EAAC;QAEd;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eAEf9E,OAAA,CAACpB,UAAU;UAAA0F,QAAA,GACR3D,KAAK,CAAC0E,GAAG,CAAC,CAAC5D,IAAI,EAAEyB,KAAK,kBACrBlD,OAAA;YAAiB0E,OAAO,EAAEA,CAAA,KAAMN,eAAe,CAAC3C,IAAI,CAAE;YAAA6C,QAAA,eACpDtE,OAAA,CAACT,IAAI;cAAC+F,EAAE,EAAE,CAAE;cAAAhB,QAAA,gBACVtE,OAAA,CAACd,MAAM;gBAACqG,IAAI,EAAE9D,IAAI,CAAC8D;cAAK;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC3B9E,OAAA,CAACR,GAAG;gBAACwF,EAAE,EAAC,GAAG;gBAAAV,QAAA,gBACTtE,OAAA,CAACb,IAAI;kBAAC8F,UAAU,EAAC,MAAM;kBAAAX,QAAA,GACpB7C,IAAI,CAAC8D,IAAI,eACVvF,OAAA,CAACxB,KAAK;oBAACwG,EAAE,EAAC,GAAG;oBAACP,WAAW,EAAC,OAAO;oBAAAH,QAAA,GAAC,UACxB,EAAC7C,IAAI,CAACrB,MAAM,CAACoF,MAAM;kBAAA;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACP9E,OAAA,CAACb,IAAI;kBAAC+F,QAAQ,EAAC,IAAI;kBAAAZ,QAAA,EAAE7C,IAAI,CAACyC;gBAAK;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA,GAVU5B,KAAK;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWjB;UAAC,GAZC5B,KAAK;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaV,CACN,CAAC,EACDnE,KAAK,CAAC6E,MAAM,KAAK,CAAC,iBAAIxF,OAAA;YAAAsE,QAAA,EAAG;UAAc;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eAEb9E,OAAA,CAACf,YAAY;UAAAqF,QAAA,gBACXtE,OAAA,CAACvB,MAAM;YACLgH,OAAO,EAAC,SAAS;YACjBC,EAAE,EAAE,CAAE;YACNhB,OAAO,EAAEA,CAAA,KAAM;cACbhE,OAAO,CAAC,CAAC;cACT2D,WAAW,CAAC,CAAC;YACf,CAAE;YAAAC,QAAA,EACH;UAED;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT9E,OAAA,CAACvB,MAAM;YAACgG,WAAW,EAAC,MAAM;YAAAH,QAAA,EAAC;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACT9E,OAAA,CAACP,SAAS;MAACkG,IAAI,EAAC,KAAK;MAACC,KAAK,EAAC,OAAO;MAAAtB,QAAA,gBACjCtE,OAAA;QAAKuE,SAAS,EAAC,YAAY;QAAAD,QAAA,eACzBtE,OAAA,CAACZ,IAAI;UAAAkF,QAAA,gBACHtE,OAAA,CAACX,UAAU;YAAAiF,QAAA,eACTtE,OAAA;cAAKuE,SAAS,EAAC,QAAQ;cAAAD,QAAA,gBACrBtE,OAAA;gBAAI6F,KAAK,EAAE;kBAAED,KAAK,EAAE;gBAAQ,CAAE;gBAAAtB,QAAA,EAAC;cAAY;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChD9E,OAAA,CAACvB,MAAM;gBAACiG,OAAO,EAAEjB,YAAa;gBAAAa,QAAA,EAAC;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eACb9E,OAAA,CAACV,QAAQ;YAACwG,EAAE,EAAE,CAAE;YAAAxB,QAAA,eACdtE,OAAA;cAAM+F,QAAQ,EAAEvD,WAAY;cAAA8B,QAAA,gBAC1BtE,OAAA,CAAC3B,WAAW;gBAAAiG,QAAA,gBACVtE,OAAA,CAAC1B,SAAS;kBAAAgG,QAAA,EAAC;gBAAK;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,eAC5B9E,OAAA,CAACzB,KAAK;kBACJyH,IAAI,EAAC,MAAM;kBACXT,IAAI,EAAC,OAAO;kBACZU,KAAK,EAAE3F,SAAU;kBACjB4F,QAAQ,EAAGC,CAAC,IAAK5F,YAAY,CAAC4F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;kBAC9CI,EAAE,EAAC,OAAO;kBACVC,WAAW,EAAC;gBAAkB;kBAAA3B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS,CAAC,eACd9E,OAAA,CAACvB,MAAM;gBACLuH,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAC,WAAW;gBACjBM,EAAE,EAAE,CAAE;gBACNC,UAAU,EAAE,QAAS;gBACrBC,cAAc,EAAE,QAAS;gBACzBhC,WAAW,EAAC,MAAM;gBAAAH,QAAA,EACnB;cAED;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EACL/D,YAAY,IAAIF,kBAAkB,CAAC2E,MAAM,GAAG,CAAC,gBAC5CxF,OAAA,CAACZ,IAAI;QAACmF,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC5BtE,OAAA,CAACX,UAAU;UAAAiF,QAAA,eACTtE,OAAA;YAAAsE,QAAA,GACGvD,YAAY,CAACwE,IAAI,EAAC,oBAAkB,EAAC,GAAG,EACxC1E,kBAAkB,CAAC2E,MAAM;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC,eACb9E,OAAA,CAACV,QAAQ;UAAAgF,QAAA,eACPtE,OAAA,CAACF,cAAc;YAAC4G,GAAG,EAAE,EAAG;YAAApC,QAAA,EACrBzD,kBAAkB,CAACwE,GAAG,CAAC,CAACrC,KAAK,EAAEE,KAAK,kBACnClD,OAAA,CAACT,IAAI;cAEHoH,SAAS,EAAC,kEAAkE;cAC5EF,cAAc,EAAC,eAAe;cAC9BG,aAAa,EAAC,QAAQ;cACtBC,QAAQ,EAAC,QAAQ;cACjBC,EAAE,EAAC,WAAW;cACdC,OAAO,EAAE,CAAE;cACXC,IAAI,EAAE,CAAE;cAAA1C,QAAA,eAERtE,OAAA,CAACR,GAAG;gBACFmG,IAAI,EAAC,MAAM;gBACXsB,WAAW,EAAC,KAAK;gBACjBC,YAAY,EAAC,IAAI;gBACjBL,QAAQ,EAAC,QAAQ;gBACjBtC,SAAS,EAAC,WAAW;gBAAAD,QAAA,gBAErBtE,OAAA,CAACN,KAAK;kBAACqF,GAAG,EAAErB,QAAQ,CAACC,QAAS;kBAACwD,GAAG,EAAEnE,KAAM;kBAACoE,KAAK,EAAC;gBAAM;kBAAAzC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAE1D9E,OAAA,CAACR,GAAG;kBAAC6H,CAAC,EAAC,GAAG;kBAAC9C,SAAS,EAAC,QAAQ;kBAAAD,QAAA,eAC3BtE,OAAA,CAACR,GAAG;oBACF+G,EAAE,EAAC,GAAG;oBACNtB,UAAU,EAAC,UAAU;oBACrBqC,EAAE,EAAC,IAAI;oBACPC,UAAU,EAAC,OAAO;oBAClBC,SAAS,EAAE,CAAE;oBAAAlD,QAAA,EAEZtB;kBAAK;oBAAA2B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACN9E,OAAA;kBAAKuE,SAAS,EAAC,eAAe;kBAAAD,QAAA,gBAC5BtE,OAAA,CAACH,QAAQ;oBACP6E,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAACC,KAAK,CAAE;oBAChCuE,CAAC,EAAE,CAAE;oBACLC,CAAC,EAAE,CAAE;oBACL9B,KAAK,EAAC;kBAAU;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjB,CAAC,eAEF9E,OAAA,CAACJ,UAAU;oBACT8E,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACN,KAAK,CAAE;oBAClCuE,CAAC,EAAE,CAAE;oBACLC,CAAC,EAAE,CAAE;oBACL9B,KAAK,EAAC;kBAAU;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GA5CD5B,KAAK;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA6CN,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,gBAEP9E,OAAA,CAACZ,IAAI;QAACmF,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC5BtE,OAAA,CAACX,UAAU;UAAAiF,QAAA,eACTtE,OAAA;YAAAsE,QAAA,GAAI,yBAAuB,EAAClE,MAAM,CAACoF,MAAM;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eACb9E,OAAA,CAACV,QAAQ;UAAAgF,QAAA,eACPtE,OAAA,CAACF,cAAc;YAAC4G,GAAG,EAAE,EAAG;YAAApC,QAAA,EACrBlE,MAAM,CAACiF,GAAG,CAAC,CAACrC,KAAK,EAAEE,KAAK,kBACvBlD,OAAA,CAACT,IAAI;cAEHoH,SAAS,EAAC,kEAAkE;cAC5EF,cAAc,EAAC,eAAe;cAC9BG,aAAa,EAAC,QAAQ;cACtBC,QAAQ,EAAC,QAAQ;cACjBC,EAAE,EAAC,WAAW;cACdC,OAAO,EAAE,CAAE;cACXC,IAAI,EAAE,CAAE;cAAA1C,QAAA,eAERtE,OAAA,CAACR,GAAG;gBACFmG,IAAI,EAAC,MAAM;gBACXsB,WAAW,EAAC,KAAK;gBACjBC,YAAY,EAAC,IAAI;gBACjBL,QAAQ,EAAC,QAAQ;gBACjBtC,SAAS,EAAC,WAAW;gBAAAD,QAAA,gBAErBtE,OAAA,CAACN,KAAK;kBAACqF,GAAG,EAAErB,QAAQ,CAACC,QAAS;kBAACwD,GAAG,EAAEnE,KAAM;kBAACoE,KAAK,EAAC;gBAAM;kBAAAzC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAE1D9E,OAAA,CAACR,GAAG;kBAAC6H,CAAC,EAAC,GAAG;kBAAC9C,SAAS,EAAC,QAAQ;kBAAAD,QAAA,eAC3BtE,OAAA,CAACR,GAAG;oBACF+G,EAAE,EAAC,GAAG;oBACNtB,UAAU,EAAC,UAAU;oBACrBqC,EAAE,EAAC,IAAI;oBACPC,UAAU,EAAC,OAAO;oBAClBC,SAAS,EAAE,CAAE;oBAAAlD,QAAA,EAEZtB;kBAAK;oBAAA2B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACN9E,OAAA;kBAAKuE,SAAS,EAAC,eAAe;kBAAAD,QAAA,gBAC5BtE,OAAA,CAACH,QAAQ;oBACP6E,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAACC,KAAK,CAAE;oBAChCuE,CAAC,EAAE,CAAE;oBACLC,CAAC,EAAE,CAAE;oBACL9B,KAAK,EAAC;kBAAU;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjB,CAAC,eAEF9E,OAAA,CAACJ,UAAU;oBACT8E,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACN,KAAK,CAAE;oBAClCuE,CAAC,EAAE,CAAE;oBACLC,CAAC,EAAE,CAAE;oBACL9B,KAAK,EAAC;kBAAU;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GA5CD5B,KAAK;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA6CN,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAC5E,EAAA,CAhcID,SAAS;EAAA,QACI9B,WAAW,EAMQO,aAAa;AAAA;AAAAiJ,EAAA,GAP7C1H,SAAS;AAkcf,eAAeA,SAAS;AAAC,IAAA0H,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}