{"ast":null,"code":"var _jsxFileName = \"/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { Input, Badge, Button } from \"@chakra-ui/react\";\nimport { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport { Card, CardHeader, CardBody } from \"@chakra-ui/react\";\nimport \"./Pages.style.css\";\nimport { ListItem, OrderedList } from \"@chakra-ui/react\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { Grid, GridItem } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [quotes, setQuotes] = useState([]);\n  const [tempQuote, setTempQuote] = useState(\"\");\n  async function populateQuote() {\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setQuotes(response.quotes);\n    } else {\n      alert(response.error);\n    }\n  }\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwtDecode(token);\n      if (!user) {\n        navigate(\"/login\");\n        localStorage.removeItem(\"token\");\n      } else {\n        populateQuote();\n      }\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n  async function createQuote(event) {\n    event.preventDefault();\n    if (tempQuote === \"\") {\n      alert(\"Please enter a quote\");\n      return;\n    } else {\n      const data = await fetch(\"http://localhost:1337/api/quote\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          quote: tempQuote\n        })\n      });\n      const response = await data.json();\n      console.log(response.status);\n      if (response.status === \"ok\") {\n        setTempQuote(\"\");\n        setQuotes([...quotes, tempQuote]); // Update the quotes array\n      } else {\n        alert(response.error);\n      }\n    }\n  }\n  async function editQuote(index) {\n    const currentQuote = quotes[index];\n    const newQuote = prompt(\"Enter new quote\", currentQuote);\n    if (newQuote !== null && newQuote.trim() !== \"\") {\n      const updatedQuotes = [...quotes];\n      updatedQuotes[index] = newQuote;\n\n      // Make API request to update the quotes on the server\n      const data = await fetch(\"http://localhost:1337/api/quote\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          quotes: updatedQuotes\n        })\n      });\n      const response = await data.json();\n      if (response.status === \"ok\") {\n        setQuotes(updatedQuotes);\n      } else {\n        alert(response.error);\n      }\n    } else if (newQuote !== null) {\n      // Show an alert if the user entered an empty quote\n      alert(\"Please enter a non-empty quote.\");\n    }\n  }\n  async function deleteQuote(index) {\n    const updatedQuotes = [...quotes];\n    updatedQuotes.splice(index, 1);\n\n    // Make API request to update the quotes on the server\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        quotes: updatedQuotes\n      })\n    });\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setQuotes(updatedQuotes);\n    } else {\n      alert(response.error);\n    }\n  }\n  function handleLogout() {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  }\n  const property = {\n    imageUrl: \" ../../public/quotes-bg.jpg\",\n    imageAlt: \"Rear view of modern home with pool\",\n    beds: 3,\n    baths: 2,\n    title: \"Modern home in city center in the heart of historic Los Angeles\",\n    formattedPrice: \"$1,900.00\",\n    reviewCount: 34,\n    rating: 4\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createQuote,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Quote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"quote\",\n              value: tempQuote,\n              onChange: e => setTempQuote(e.target.value),\n              id: \"quote\",\n              placeholder: \"Enter your quote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              mt: 4,\n              cursor: \"pointer\",\n              type: \"submit\",\n              value: \"Get Quote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: \"Your Quotes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(5, 1fr)\",\n          gap: 6,\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            w: \"100%\",\n            h: \"10\",\n            bg: \"blue.500\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              maxW: \"sm\",\n              borderWidth: \"1px\",\n              borderRadius: \"lg\",\n              overflow: \"hidden\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: property.imageUrl,\n                alt: property.imageAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                p: \"6\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"baseline\",\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    borderRadius: \"full\",\n                    px: \"2\",\n                    colorScheme: \"teal\",\n                    children: \"New\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    color: \"gray.500\",\n                    fontWeight: \"semibold\",\n                    letterSpacing: \"wide\",\n                    fontSize: \"xs\",\n                    textTransform: \"uppercase\",\n                    ml: \"2\",\n                    children: [property.beds, \" beds \\u2022 \", property.baths, \" baths\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  mt: \"1\",\n                  fontWeight: \"semibold\",\n                  as: \"h4\",\n                  lineHeight: \"tight\",\n                  noOfLines: 1,\n                  children: property.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [property.formattedPrice, /*#__PURE__*/_jsxDEV(Box, {\n                    as: \"span\",\n                    color: \"gray.600\",\n                    fontSize: \"sm\",\n                    children: \"/ wk\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  mt: \"2\",\n                  alignItems: \"center\",\n                  children: [Array(5).fill(\"\").map((_, i) => /*#__PURE__*/_jsxDEV(StarIcon, {\n                    color: i < property.rating ? \"teal.500\" : \"gray.300\"\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(Box, {\n                    as: \"span\",\n                    ml: \"2\",\n                    color: \"gray.600\",\n                    fontSize: \"sm\",\n                    children: [property.reviewCount, \" reviews\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrderedList, {\n          children: quotes.map((quote, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            className: \"list\",\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              variant: \"outline\",\n              colorScheme: \"green\",\n              padding: 2,\n              width: \"100%\",\n              borderRadius: \"md\",\n              textAlign: \"center\",\n              fontSize: \"lg\",\n              fontWeight: \"bold\",\n              textTransform: \"uppercase\",\n              mb: 2,\n              children: quote\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-container\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                ml: 2,\n                size: \"sm\",\n                variant: \"ghost\",\n                colorScheme: \"red\",\n                onClick: () => editQuote(index),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  w: 4,\n                  h: 4,\n                  color: \"red.500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                ml: 2,\n                size: \"sm\",\n                variant: \"ghost\",\n                colorScheme: \"red\",\n                onClick: () => deleteQuote(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  w: 4,\n                  h: 4,\n                  color: \"red.500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), quotes.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No quotes found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"a+EX4+SZhM5MQi+dBAVdAC6aF4I=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jwtDecode","Input","Badge","Button","FormControl","FormLabel","Card","CardHeader","CardBody","ListItem","OrderedList","DeleteIcon","EditIcon","Grid","GridItem","jsxDEV","_jsxDEV","Dashboard","_s","navigate","quotes","setQuotes","tempQuote","setTempQuote","populateQuote","data","fetch","method","headers","localStorage","getItem","response","json","status","alert","error","token","user","removeItem","createQuote","event","preventDefault","body","JSON","stringify","quote","console","log","editQuote","index","currentQuote","newQuote","prompt","trim","updatedQuotes","deleteQuote","splice","handleLogout","property","imageUrl","imageAlt","beds","baths","title","formattedPrice","reviewCount","rating","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","name","value","onChange","e","target","id","placeholder","mt","cursor","templateColumns","gap","w","h","bg","Box","maxW","borderWidth","borderRadius","overflow","Image","src","alt","p","display","alignItems","px","colorScheme","color","fontWeight","letterSpacing","fontSize","textTransform","ml","as","lineHeight","noOfLines","Array","fill","map","_","i","StarIcon","variant","padding","width","textAlign","mb","size","length","_c","$RefreshReg$"],"sources":["/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { Input, Badge, Button } from \"@chakra-ui/react\";\nimport { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport { Card, CardHeader, CardBody } from \"@chakra-ui/react\";\nimport \"./Pages.style.css\";\nimport { ListItem, OrderedList } from \"@chakra-ui/react\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { Grid, GridItem } from \"@chakra-ui/react\";\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n\n  const [quotes, setQuotes] = useState([]);\n\n  const [tempQuote, setTempQuote] = useState(\"\");\n\n  async function populateQuote() {\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const response = await data.json();\n\n    if (response.status === \"ok\") {\n      setQuotes(response.quotes);\n    } else {\n      alert(response.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = jwtDecode(token);\n\n      if (!user) {\n        navigate(\"/login\");\n        localStorage.removeItem(\"token\");\n      } else {\n        populateQuote();\n      }\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n\n  async function createQuote(event) {\n    event.preventDefault();\n\n    if (tempQuote === \"\") {\n      alert(\"Please enter a quote\");\n      return;\n    } else {\n      const data = await fetch(\"http://localhost:1337/api/quote\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          quote: tempQuote,\n        }),\n      });\n\n      const response = await data.json();\n      console.log(response.status);\n      if (response.status === \"ok\") {\n        setTempQuote(\"\");\n        setQuotes([...quotes, tempQuote]); // Update the quotes array\n      } else {\n        alert(response.error);\n      }\n    }\n  }\n\n  async function editQuote(index) {\n    const currentQuote = quotes[index];\n    const newQuote = prompt(\"Enter new quote\", currentQuote);\n\n    if (newQuote !== null && newQuote.trim() !== \"\") {\n      const updatedQuotes = [...quotes];\n      updatedQuotes[index] = newQuote;\n\n      // Make API request to update the quotes on the server\n      const data = await fetch(\"http://localhost:1337/api/quote\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          quotes: updatedQuotes,\n        }),\n      });\n\n      const response = await data.json();\n      if (response.status === \"ok\") {\n        setQuotes(updatedQuotes);\n      } else {\n        alert(response.error);\n      }\n    } else if (newQuote !== null) {\n      // Show an alert if the user entered an empty quote\n      alert(\"Please enter a non-empty quote.\");\n    }\n  }\n\n  async function deleteQuote(index) {\n    const updatedQuotes = [...quotes];\n    updatedQuotes.splice(index, 1);\n\n    // Make API request to update the quotes on the server\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        quotes: updatedQuotes,\n      }),\n    });\n\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setQuotes(updatedQuotes);\n    } else {\n      alert(response.error);\n    }\n  }\n\n  function handleLogout() {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  }\n\n  const property = {\n    imageUrl: \" ../../public/quotes-bg.jpg\",\n    imageAlt: \"Rear view of modern home with pool\",\n    beds: 3,\n    baths: 2,\n    title: \"Modern home in city center in the heart of historic Los Angeles\",\n    formattedPrice: \"$1,900.00\",\n    reviewCount: 34,\n    rating: 4,\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <div className=\"header\">\n            <h1>Create Quote</h1>\n            <Button onClick={handleLogout}>Logout</Button>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <form onSubmit={createQuote}>\n            <FormControl>\n              <FormLabel>Quote</FormLabel>\n              <Input\n                type=\"text\"\n                name=\"quote\"\n                value={tempQuote}\n                onChange={(e) => setTempQuote(e.target.value)}\n                id=\"quote\"\n                placeholder=\"Enter your quote\"\n              />\n              <Input\n                mt={4}\n                cursor={\"pointer\"}\n                type=\"submit\"\n                value=\"Get Quote\"\n              />\n            </FormControl>\n          </form>\n        </CardBody>\n      </Card>\n\n      <Card mt={4}>\n        <CardHeader>Your Quotes:</CardHeader>\n        <CardBody>\n          <Grid templateColumns=\"repeat(5, 1fr)\" gap={6}>\n            <GridItem w=\"100%\" h=\"10\" bg=\"blue.500\">\n              <Box\n                maxW=\"sm\"\n                borderWidth=\"1px\"\n                borderRadius=\"lg\"\n                overflow=\"hidden\"\n              >\n                <Image src={property.imageUrl} alt={property.imageAlt} />\n\n                <Box p=\"6\">\n                  <Box display=\"flex\" alignItems=\"baseline\">\n                    <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                      New\n                    </Badge>\n                    <Box\n                      color=\"gray.500\"\n                      fontWeight=\"semibold\"\n                      letterSpacing=\"wide\"\n                      fontSize=\"xs\"\n                      textTransform=\"uppercase\"\n                      ml=\"2\"\n                    >\n                      {property.beds} beds &bull; {property.baths} baths\n                    </Box>\n                  </Box>\n\n                  <Box\n                    mt=\"1\"\n                    fontWeight=\"semibold\"\n                    as=\"h4\"\n                    lineHeight=\"tight\"\n                    noOfLines={1}\n                  >\n                    {property.title}\n                  </Box>\n\n                  <Box>\n                    {property.formattedPrice}\n                    <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n                      / wk\n                    </Box>\n                  </Box>\n\n                  <Box display=\"flex\" mt=\"2\" alignItems=\"center\">\n                    {Array(5)\n                      .fill(\"\")\n                      .map((_, i) => (\n                        <StarIcon\n                          key={i}\n                          color={i < property.rating ? \"teal.500\" : \"gray.300\"}\n                        />\n                      ))}\n                    <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n                      {property.reviewCount} reviews\n                    </Box>\n                  </Box>\n                </Box>\n              </Box>\n            </GridItem>\n          </Grid>\n          <OrderedList>\n            {quotes.map((quote, index) => (\n              <ListItem className=\"list\" key={index}>\n                <Badge\n                  key={index}\n                  variant=\"outline\"\n                  colorScheme=\"green\"\n                  padding={2}\n                  width={\"100%\"}\n                  borderRadius=\"md\"\n                  textAlign=\"center\"\n                  fontSize=\"lg\"\n                  fontWeight=\"bold\"\n                  textTransform=\"uppercase\"\n                  mb={2}\n                >\n                  {quote}\n                </Badge>\n                <div className=\"btn-container\">\n                  <Button\n                    ml={2}\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    colorScheme=\"red\"\n                    onClick={() => editQuote(index)}\n                  >\n                    <EditIcon w={4} h={4} color=\"red.500\" />\n                  </Button>\n                  <Button\n                    ml={2}\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    colorScheme=\"red\"\n                    onClick={() => deleteQuote(index)}\n                  >\n                    <DeleteIcon w={4} h={4} color=\"red.500\" />\n                  </Button>\n                </div>\n              </ListItem>\n            ))}\n          </OrderedList>\n          {quotes.length === 0 && <p>No quotes found</p>}\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}