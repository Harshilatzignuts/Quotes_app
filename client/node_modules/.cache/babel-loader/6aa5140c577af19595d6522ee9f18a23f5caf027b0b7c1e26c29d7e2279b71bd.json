{"ast":null,"code":"var _jsxFileName = \"/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { FormControl, FormLabel, Input, Badge, Button, useDisclosure, Drawer, DrawerBody, DrawerOverlay, DrawerContent, DrawerCloseButton, DrawerHeader, DrawerFooter, Avatar, Text } from \"@chakra-ui/react\";\nimport { Card, CardHeader, CardBody, Flex, Box, Container, Image } from \"@chakra-ui/react\";\nimport \"./Pages.style.css\";\nimport QuotesImage from \"../assets/quotes-bg.jpg\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport ChakraCarousel from \"./ChakraCarousel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [quotes, setQuotes] = useState([]);\n  const [tempQuote, setTempQuote] = useState(\"\");\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [users, setUsers] = useState([]);\n  const btnRef = React.useRef();\n  async function populateQuote() {\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setQuotes(response.quotes);\n    } else {\n      alert(response.error);\n    }\n  }\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwtDecode(token);\n      if (!user) {\n        navigate(\"/login\");\n        localStorage.removeItem(\"token\");\n      } else {\n        populateQuote();\n      }\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n  async function createQuote(event) {\n    event.preventDefault();\n    const newQuote = tempQuote.trim();\n\n    // Check if the new quote already exists\n    if (quotes.includes(newQuote)) {\n      alert(\"Duplicate quote. Please enter a different quote.\");\n      return;\n    }\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        quote: newQuote\n      })\n    });\n    const response = await data.json();\n    console.log(response.status);\n    if (response.status === \"ok\") {\n      setTempQuote(\"\");\n      setQuotes([newQuote, ...quotes]); // Add the new quote to the beginning of the array\n    } else {\n      alert(response.error);\n    }\n  }\n  async function editQuote(index) {\n    const currentQuote = quotes[index];\n    const newQuote = prompt(\"Enter new quote\", currentQuote);\n    if (newQuote !== null && newQuote.trim() !== \"\") {\n      // Check if the edited quote already exists\n      if (quotes.includes(newQuote)) {\n        alert(\"Duplicate quote. Please enter a different quote.\");\n        return;\n      }\n      const updatedQuotes = [...quotes];\n      updatedQuotes[index] = newQuote;\n\n      // Move the edited quote to the front of the array\n      updatedQuotes.unshift(updatedQuotes.splice(index, 1)[0]);\n\n      // Make API request to update the quotes on the server\n      const data = await fetch(\"http://localhost:1337/api/quote\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          quotes: updatedQuotes\n        })\n      });\n      const response = await data.json();\n      if (response.status === \"ok\") {\n        setQuotes(updatedQuotes);\n      } else {\n        alert(response.error);\n      }\n    } else if (newQuote !== null) {\n      // Show an alert if the user entered an empty quote\n      alert(\"Please enter a non-empty quote.\");\n    }\n  }\n  async function deleteQuote(index) {\n    const updatedQuotes = [...quotes];\n    updatedQuotes.splice(index, 1);\n\n    // Make API request to update the quotes on the server\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        quotes: updatedQuotes\n      })\n    });\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setQuotes(updatedQuotes);\n    } else {\n      alert(response.error);\n    }\n  }\n  function handleLogout() {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  }\n  const property = {\n    imageUrl: QuotesImage,\n    imageAlt: quotes,\n    imageWidth: \"100%\",\n    title: quotes\n  };\n\n  // find users\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const data = await fetch(\"http://localhost:1337/api/users\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        }\n      });\n      const response = await data.json();\n      if (response.status === \"ok\") {\n        // Filter out the current user from the list of all users\n        const filteredUsers = response.users.filter(user => user.email !== localStorage.getItem(\"currentUser\"));\n        setUsers(filteredUsers);\n      } else {\n        alert(response.error);\n      }\n    }\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      ref: btnRef,\n      colorScheme: \"teal\",\n      onClick: onOpen,\n      children: \"Users List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isOpen,\n      placement: \"right\",\n      onClose: onClose,\n      finalFocusRef: btnRef,\n      children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerHeader, {\n          children: \"These are all using this app to create Quotes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          children: [users.map((user, index) => /*#__PURE__*/_jsxDEV(Flex, {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              content: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              ml: \"3\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"bold\",\n                children: [user.name, /*#__PURE__*/_jsxDEV(Badge, {\n                  ml: \"1\",\n                  colorScheme: \"green\",\n                  children: \"New\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"sm\",\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)), users.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No users found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"6xl\",\n      color: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-page\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  color: \"black\"\n                },\n                children: \"Create Quote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleLogout,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            pt: 0,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: createQuote,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Quote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"quote\",\n                  value: tempQuote,\n                  onChange: e => setTempQuote(e.target.value),\n                  id: \"quote\",\n                  placeholder: \"Enter your quote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                value: \"Get Quote\",\n                mt: 2,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                colorScheme: \"teal\",\n                children: \"Get Quote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"quotes-cards\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Your Number of Quotes: \", quotes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(ChakraCarousel, {\n            gap: 32,\n            children: quotes.map((quote, index) => /*#__PURE__*/_jsxDEV(Flex, {\n              boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\",\n              justifyContent: \"space-between\",\n              flexDirection: \"column\",\n              overflow: \"hidden\",\n              bg: \"base.d100\",\n              rounded: 5,\n              flex: 1,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                maxW: \"100%\",\n                borderWidth: \"1px\",\n                borderRadius: \"lg\",\n                overflow: \"hidden\",\n                className: \"image-box\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  src: property.imageUrl,\n                  alt: quote,\n                  width: \"100%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  p: \"6\",\n                  className: \"Quotes\",\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mt: \"1\",\n                    fontWeight: \"semibold\",\n                    as: \"h4\",\n                    lineHeight: \"tight\",\n                    noOfLines: 3,\n                    children: quote\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-container\",\n                  children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                    onClick: () => editQuote(index),\n                    w: 8,\n                    h: 8,\n                    color: \"teal.500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    onClick: () => deleteQuote(index),\n                    w: 8,\n                    h: 8,\n                    color: \"teal.500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"BzM9FD5I+ehnUB/6WeZp84AFRM4=\", false, function () {\n  return [useNavigate, useDisclosure];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jwtDecode","FormControl","FormLabel","Input","Badge","Button","useDisclosure","Drawer","DrawerBody","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerFooter","Avatar","Text","Card","CardHeader","CardBody","Flex","Box","Container","Image","QuotesImage","DeleteIcon","EditIcon","ChakraCarousel","jsxDEV","_jsxDEV","Dashboard","_s","navigate","quotes","setQuotes","tempQuote","setTempQuote","isOpen","onOpen","onClose","users","setUsers","btnRef","useRef","populateQuote","data","fetch","method","headers","localStorage","getItem","response","json","status","alert","error","token","user","removeItem","createQuote","event","preventDefault","newQuote","trim","includes","body","JSON","stringify","quote","console","log","editQuote","index","currentQuote","prompt","updatedQuotes","unshift","splice","deleteQuote","handleLogout","property","imageUrl","imageAlt","imageWidth","title","fetchUsers","filteredUsers","filter","email","children","ref","colorScheme","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placement","finalFocusRef","map","className","content","name","ml","fontWeight","fontSize","length","variant","mr","maxW","color","style","pt","onSubmit","type","value","onChange","e","target","id","placeholder","mt","alignItems","justifyContent","gap","boxShadow","flexDirection","overflow","bg","rounded","flex","borderWidth","borderRadius","src","alt","width","p","as","lineHeight","noOfLines","w","h","_c","$RefreshReg$"],"sources":["/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Badge,\n  Button,\n  useDisclosure,\n  Drawer,\n  DrawerBody,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerFooter,\n  Avatar,\n  Text,\n} from \"@chakra-ui/react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Box,\n  Container,\n  Image,\n} from \"@chakra-ui/react\";\nimport \"./Pages.style.css\";\nimport QuotesImage from \"../assets/quotes-bg.jpg\";\n\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\n\nimport ChakraCarousel from \"./ChakraCarousel\";\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n\n  const [quotes, setQuotes] = useState([]);\n\n  const [tempQuote, setTempQuote] = useState(\"\");\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [users, setUsers] = useState([]);\n\n  const btnRef = React.useRef();\n\n  async function populateQuote() {\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"GET\",\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const response = await data.json();\n\n    if (response.status === \"ok\") {\n      setQuotes(response.quotes);\n    } else {\n      alert(response.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = jwtDecode(token);\n\n      if (!user) {\n        navigate(\"/login\");\n        localStorage.removeItem(\"token\");\n      } else {\n        populateQuote();\n      }\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n\n  async function createQuote(event) {\n    event.preventDefault();\n    const newQuote = tempQuote.trim();\n\n    // Check if the new quote already exists\n    if (quotes.includes(newQuote)) {\n      alert(\"Duplicate quote. Please enter a different quote.\");\n      return;\n    }\n\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        quote: newQuote,\n      }),\n    });\n\n    const response = await data.json();\n    console.log(response.status);\n    if (response.status === \"ok\") {\n      setTempQuote(\"\");\n      setQuotes([newQuote, ...quotes]); // Add the new quote to the beginning of the array\n    } else {\n      alert(response.error);\n    }\n  }\n\n  async function editQuote(index) {\n    const currentQuote = quotes[index];\n    const newQuote = prompt(\"Enter new quote\", currentQuote);\n\n    if (newQuote !== null && newQuote.trim() !== \"\") {\n      // Check if the edited quote already exists\n      if (quotes.includes(newQuote)) {\n        alert(\"Duplicate quote. Please enter a different quote.\");\n        return;\n      }\n\n      const updatedQuotes = [...quotes];\n      updatedQuotes[index] = newQuote;\n\n      // Move the edited quote to the front of the array\n      updatedQuotes.unshift(updatedQuotes.splice(index, 1)[0]);\n\n      // Make API request to update the quotes on the server\n      const data = await fetch(\"http://localhost:1337/api/quote\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          quotes: updatedQuotes,\n        }),\n      });\n\n      const response = await data.json();\n      if (response.status === \"ok\") {\n        setQuotes(updatedQuotes);\n      } else {\n        alert(response.error);\n      }\n    } else if (newQuote !== null) {\n      // Show an alert if the user entered an empty quote\n      alert(\"Please enter a non-empty quote.\");\n    }\n  }\n\n  async function deleteQuote(index) {\n    const updatedQuotes = [...quotes];\n    updatedQuotes.splice(index, 1);\n\n    // Make API request to update the quotes on the server\n    const data = await fetch(\"http://localhost:1337/api/quote\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        quotes: updatedQuotes,\n      }),\n    });\n\n    const response = await data.json();\n    if (response.status === \"ok\") {\n      setQuotes(updatedQuotes);\n    } else {\n      alert(response.error);\n    }\n  }\n\n  function handleLogout() {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  }\n\n  const property = {\n    imageUrl: QuotesImage,\n    imageAlt: quotes,\n    imageWidth: \"100%\",\n    title: quotes,\n  };\n\n  // find users\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const data = await fetch(\"http://localhost:1337/api/users\", {\n        method: \"GET\",\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      });\n\n      const response = await data.json();\n\n      if (response.status === \"ok\") {\n        // Filter out the current user from the list of all users\n        const filteredUsers = response.users.filter(\n          (user) => user.email !== localStorage.getItem(\"currentUser\")\n        );\n\n        setUsers(filteredUsers);\n      } else {\n        alert(response.error);\n      }\n    }\n\n    fetchUsers();\n  }, []);\n\n  return (\n    <div>\n      <Button ref={btnRef} colorScheme=\"teal\" onClick={onOpen}>\n        Users List\n      </Button>\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>\n            These are all using this app to create Quotes:\n          </DrawerHeader>\n\n          <DrawerBody>\n            {users.map((user, index) => (\n              <Flex className=\"mb-2\">\n                <Avatar content={user.name} />\n                <Box ml=\"3\">\n                  <Text fontWeight=\"bold\">\n                    {user.name}\n                    <Badge ml=\"1\" colorScheme=\"green\">\n                      New\n                    </Badge>\n                  </Text>\n                  <Text fontSize=\"sm\">{user.email}</Text>\n                </Box>\n              </Flex>\n            ))}\n            {users.length === 0 && <p>No users found</p>}\n          </DrawerBody>\n\n          <DrawerFooter>\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\n              Cancel\n            </Button>\n            <Button colorScheme=\"blue\">Save</Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n      <Container maxW=\"6xl\" color=\"white\">\n        <div className=\"inner-page\">\n          <Card>\n            <CardHeader>\n              <div className=\"header\">\n                <h1 style={{ color: \"black\" }}>Create Quote</h1>\n                <Button onClick={handleLogout}>Logout</Button>\n              </div>\n            </CardHeader>\n            <CardBody pt={0}>\n              <form onSubmit={createQuote}>\n                <FormControl>\n                  <FormLabel>Quote</FormLabel>\n                  <Input\n                    type=\"text\"\n                    name=\"quote\"\n                    value={tempQuote}\n                    onChange={(e) => setTempQuote(e.target.value)}\n                    id=\"quote\"\n                    placeholder=\"Enter your quote\"\n                  />\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  value=\"Get Quote\"\n                  mt={2}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  colorScheme=\"teal\"\n                >\n                  Get Quote\n                </Button>\n              </form>\n            </CardBody>\n          </Card>\n        </div>\n        <Card className=\"quotes-cards\">\n          <CardHeader>\n            <h1>Your Number of Quotes: {quotes.length}</h1>\n          </CardHeader>\n          <CardBody>\n            <ChakraCarousel gap={32}>\n              {quotes.map((quote, index) => (\n                <Flex\n                  key={index}\n                  boxShadow=\"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\"\n                  justifyContent=\"space-between\"\n                  flexDirection=\"column\"\n                  overflow=\"hidden\"\n                  bg=\"base.d100\"\n                  rounded={5}\n                  flex={1}\n                >\n                  <Box\n                    maxW=\"100%\"\n                    borderWidth=\"1px\"\n                    borderRadius=\"lg\"\n                    overflow=\"hidden\"\n                    className=\"image-box\"\n                  >\n                    <Image src={property.imageUrl} alt={quote} width=\"100%\" />\n\n                    <Box p=\"6\" className=\"Quotes\">\n                      <Box\n                        mt=\"1\"\n                        fontWeight=\"semibold\"\n                        as=\"h4\"\n                        lineHeight=\"tight\"\n                        noOfLines={3}\n                      >\n                        {quote}\n                      </Box>\n                    </Box>\n                    <div className=\"btn-container\">\n                      <EditIcon\n                        onClick={() => editQuote(index)}\n                        w={8}\n                        h={8}\n                        color=\"teal.500\"\n                      />\n\n                      <DeleteIcon\n                        onClick={() => deleteQuote(index)}\n                        w={8}\n                        h={8}\n                        color=\"teal.500\"\n                      />\n                    </div>\n                  </Box>\n                </Flex>\n              ))}\n            </ChakraCarousel>\n          </CardBody>\n          {/* <CardBody>\n            <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\n              {quotes.map((quote, index) => (\n                <GridItem w=\"100%\" h=\"100%\">\n                  <Box\n                    maxW=\"100%\"\n                    borderWidth=\"1px\"\n                    borderRadius=\"lg\"\n                    overflow=\"hidden\"\n                    className=\"image-box\"\n                  >\n                    <Image src={property.imageUrl} alt={quote} width=\"100%\" />\n\n                    <Box p=\"6\" className=\"Quotes\">\n                      <Box\n                        mt=\"1\"\n                        fontWeight=\"semibold\"\n                        as=\"h4\"\n                        lineHeight=\"tight\"\n                        noOfLines={3}\n                      >\n                        {quote}\n                      </Box>\n                    </Box>\n                    <div className=\"btn-container\">\n                      <EditIcon\n                        onClick={() => editQuote(index)}\n                        w={8}\n                        h={8}\n                        color=\"white.500\"\n                      />\n\n                      <DeleteIcon\n                        onClick={() => deleteQuote(index)}\n                        w={8}\n                        h={8}\n                        color=\"white.500\"\n                      />\n                    </div>\n                  </Box>\n                </GridItem>\n              ))}\n            </Grid>\n            {quotes.length === 0 && <p>No quotes found</p>}\n          </CardBody> */}\n        </Card>\n      </Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}