{"ast":null,"code":"import { noop } from '../utils/noop.js';\nimport { useState, useCallback, useEffect } from 'react';\nimport { useFreshCallback } from './useFreshCallback.js';\n\n/**\r\n * useFileDropRef\r\n * @description Drop files easily\r\n * @see {@link https://rooks.vercel.app/docs/useFileDropRef}\r\n */\nfunction useFileDropRef(options = {}, callbacks = {}) {\n  const {\n    accept,\n    maxFileSize,\n    maxFiles\n  } = options;\n  const {\n    onDrop = noop,\n    onFileAccepted = noop,\n    onFileRejected = noop,\n    onDragEnter = noop,\n    onDragLeave = noop\n  } = callbacks;\n  const [targetNode, setTargetNode] = useState(null);\n  const freshOnDrop = useFreshCallback(onDrop);\n  const freshOnFileAccepted = useFreshCallback(onFileAccepted);\n  const freshOnFileRejected = useFreshCallback(onFileRejected);\n  const freshOnDragEnter = useFreshCallback(onDragEnter);\n  const freshOnDragLeave = useFreshCallback(onDragLeave);\n  useCallback(node => {\n    setTargetNode(node);\n  }, []);\n  const fileIsValid = useCallback(file => {\n    if (accept && !accept.includes(file.type)) {\n      return {\n        valid: false,\n        reason: \"File type not allowed\"\n      };\n    }\n    if (maxFileSize && file.size > maxFileSize) {\n      return {\n        valid: false,\n        reason: \"File size exceeds the limit\"\n      };\n    }\n    return {\n      valid: true\n    };\n  }, [accept, maxFileSize]);\n  const handleDrop = useCallback(event => {\n    var _a;\n    event.preventDefault();\n    const files = Array.from(((_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.files) || []);\n    const acceptedFiles = [];\n    const rejectedFiles = [];\n    if (maxFiles && files.length > maxFiles) {\n      for (const file of files) {\n        freshOnFileRejected(file, \"Exceeded maximum number of files\");\n      }\n    } else {\n      files.forEach(file => {\n        const validationResult = fileIsValid(file);\n        if (validationResult.valid) {\n          acceptedFiles.push(file);\n          freshOnFileAccepted(file);\n        } else {\n          rejectedFiles.push(file);\n          freshOnFileRejected(file, validationResult.reason || \"Unknown reason\");\n        }\n      });\n    }\n    freshOnDrop(acceptedFiles, rejectedFiles);\n  }, [fileIsValid, freshOnFileAccepted, freshOnFileRejected, maxFiles, freshOnDrop]);\n  const handleDragOver = useCallback(event => {\n    event.preventDefault();\n  }, []);\n  useEffect(() => {\n    if (targetNode) {\n      targetNode.addEventListener(\"drop\", handleDrop);\n      targetNode.addEventListener(\"dragover\", handleDragOver);\n      targetNode.addEventListener(\"dragenter\", freshOnDragEnter);\n      targetNode.addEventListener(\"dragleave\", freshOnDragLeave);\n      return () => {\n        targetNode.removeEventListener(\"drop\", handleDrop);\n        targetNode.removeEventListener(\"dragover\", handleDragOver);\n        targetNode.removeEventListener(\"dragenter\", freshOnDragEnter);\n        targetNode.removeEventListener(\"dragleave\", freshOnDragLeave);\n      };\n    } else {\n      return () => {};\n    }\n  }, [targetNode, handleDrop, handleDragOver, freshOnDragEnter, freshOnDragLeave]);\n  return useCallback(node => {\n    setTargetNode(node);\n  }, []);\n}\nexport { useFileDropRef };","map":{"version":3,"names":["noop","useState","useCallback","useEffect","useFreshCallback","useFileDropRef","options","callbacks","accept","maxFileSize","maxFiles","onDrop","onFileAccepted","onFileRejected","onDragEnter","onDragLeave","targetNode","setTargetNode","freshOnDrop","freshOnFileAccepted","freshOnFileRejected","freshOnDragEnter","freshOnDragLeave","node","fileIsValid","file","includes","type","valid","reason","size","handleDrop","event","_a","preventDefault","files","Array","from","dataTransfer","acceptedFiles","rejectedFiles","length","forEach","validationResult","push","handleDragOver","addEventListener","removeEventListener"],"sources":["/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE/client/node_modules/rooks/dist/esm/hooks/useFileDropRef.js"],"sourcesContent":["import { noop } from '../utils/noop.js';\nimport { useState, useCallback, useEffect } from 'react';\nimport { useFreshCallback } from './useFreshCallback.js';\n\n/**\r\n * useFileDropRef\r\n * @description Drop files easily\r\n * @see {@link https://rooks.vercel.app/docs/useFileDropRef}\r\n */\r\nfunction useFileDropRef(options = {}, callbacks = {}) {\r\n    const { accept, maxFileSize, maxFiles } = options;\r\n    const { onDrop = noop, onFileAccepted = noop, onFileRejected = noop, onDragEnter = noop, onDragLeave = noop, } = callbacks;\r\n    const [targetNode, setTargetNode] = useState(null);\r\n    const freshOnDrop = useFreshCallback(onDrop);\r\n    const freshOnFileAccepted = useFreshCallback(onFileAccepted);\r\n    const freshOnFileRejected = useFreshCallback(onFileRejected);\r\n    const freshOnDragEnter = useFreshCallback(onDragEnter);\r\n    const freshOnDragLeave = useFreshCallback(onDragLeave);\r\n    useCallback((node) => {\r\n        setTargetNode(node);\r\n    }, []);\r\n    const fileIsValid = useCallback((file) => {\r\n        if (accept && !accept.includes(file.type)) {\r\n            return { valid: false, reason: \"File type not allowed\" };\r\n        }\r\n        if (maxFileSize && file.size > maxFileSize) {\r\n            return { valid: false, reason: \"File size exceeds the limit\" };\r\n        }\r\n        return { valid: true };\r\n    }, [accept, maxFileSize]);\r\n    const handleDrop = useCallback((event) => {\r\n        var _a;\r\n        event.preventDefault();\r\n        const files = Array.from(((_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.files) || []);\r\n        const acceptedFiles = [];\r\n        const rejectedFiles = [];\r\n        if (maxFiles && files.length > maxFiles) {\r\n            for (const file of files) {\r\n                freshOnFileRejected(file, \"Exceeded maximum number of files\");\r\n            }\r\n        }\r\n        else {\r\n            files.forEach((file) => {\r\n                const validationResult = fileIsValid(file);\r\n                if (validationResult.valid) {\r\n                    acceptedFiles.push(file);\r\n                    freshOnFileAccepted(file);\r\n                }\r\n                else {\r\n                    rejectedFiles.push(file);\r\n                    freshOnFileRejected(file, validationResult.reason || \"Unknown reason\");\r\n                }\r\n            });\r\n        }\r\n        freshOnDrop(acceptedFiles, rejectedFiles);\r\n    }, [\r\n        fileIsValid,\r\n        freshOnFileAccepted,\r\n        freshOnFileRejected,\r\n        maxFiles,\r\n        freshOnDrop,\r\n    ]);\r\n    const handleDragOver = useCallback((event) => {\r\n        event.preventDefault();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (targetNode) {\r\n            targetNode.addEventListener(\"drop\", handleDrop);\r\n            targetNode.addEventListener(\"dragover\", handleDragOver);\r\n            targetNode.addEventListener(\"dragenter\", freshOnDragEnter);\r\n            targetNode.addEventListener(\"dragleave\", freshOnDragLeave);\r\n            return () => {\r\n                targetNode.removeEventListener(\"drop\", handleDrop);\r\n                targetNode.removeEventListener(\"dragover\", handleDragOver);\r\n                targetNode.removeEventListener(\"dragenter\", freshOnDragEnter);\r\n                targetNode.removeEventListener(\"dragleave\", freshOnDragLeave);\r\n            };\r\n        }\r\n        else {\r\n            return () => { };\r\n        }\r\n    }, [\r\n        targetNode,\r\n        handleDrop,\r\n        handleDragOver,\r\n        freshOnDragEnter,\r\n        freshOnDragLeave,\r\n    ]);\r\n    return useCallback((node) => {\r\n        setTargetNode(node);\r\n    }, []);\r\n}\n\nexport { useFileDropRef };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}