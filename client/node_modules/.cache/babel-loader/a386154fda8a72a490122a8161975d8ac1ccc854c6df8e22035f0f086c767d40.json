{"ast":null,"code":"import { noop } from '../utils/noop.js';\nimport { useState, useRef, useEffect, useCallback } from 'react';\nconst config = {\n  box: \"content-box\"\n};\n/**\r\n *\r\n * useResizeObserverRef hook\r\n *\r\n * Returns a resize observer for a React Ref and fires a callback\r\n * https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\r\n *\r\n * @param {ResizeObserverCallback} callback Function that needs to be fired on resize\r\n * @param {ResizeObserverOptions} options An options object allowing you to set options for the observation\r\n * @returns {[CallbackRef]} callbackref\r\n * @see https://rooks.vercel.app/docs/useResizeObserverRef\r\n */\nfunction useResizeObserverRef(callback, options = config) {\n  const {\n    box\n  } = options;\n  const [node, setNode] = useState(null);\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  const handleResizeObserver = useCallback((...args) => {\n    var _a;\n    (_a = callbackRef.current) === null || _a === void 0 ? void 0 : _a.call(callbackRef, ...args);\n  }, []);\n  useEffect(() => {\n    if (node) {\n      // Create an observer instance linked to the callback function\n      const observer = new ResizeObserver(handleResizeObserver);\n      // Start observing the target node for resizes\n      observer.observe(node, {\n        box\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }\n    return noop;\n  }, [node, handleResizeObserver, box]);\n  const ref = useCallback(node => {\n    setNode(node);\n  }, []);\n  return [ref];\n}\nexport { useResizeObserverRef };","map":{"version":3,"names":["noop","useState","useRef","useEffect","useCallback","config","box","useResizeObserverRef","callback","options","node","setNode","callbackRef","current","handleResizeObserver","args","_a","call","observer","ResizeObserver","observe","disconnect","ref"],"sources":["/home/zt62/Desktop/Harshil_Dave/MERN_PRACTICE/client/node_modules/rooks/dist/esm/hooks/useResizeObserverRef.js"],"sourcesContent":["import { noop } from '../utils/noop.js';\nimport { useState, useRef, useEffect, useCallback } from 'react';\n\nconst config = {\r\n    box: \"content-box\",\r\n};\r\n/**\r\n *\r\n * useResizeObserverRef hook\r\n *\r\n * Returns a resize observer for a React Ref and fires a callback\r\n * https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\r\n *\r\n * @param {ResizeObserverCallback} callback Function that needs to be fired on resize\r\n * @param {ResizeObserverOptions} options An options object allowing you to set options for the observation\r\n * @returns {[CallbackRef]} callbackref\r\n * @see https://rooks.vercel.app/docs/useResizeObserverRef\r\n */\r\nfunction useResizeObserverRef(callback, options = config) {\r\n    const { box } = options;\r\n    const [node, setNode] = useState(null);\r\n    const callbackRef = useRef(callback);\r\n    useEffect(() => {\r\n        callbackRef.current = callback;\r\n    });\r\n    const handleResizeObserver = useCallback((...args) => {\r\n        var _a;\r\n        (_a = callbackRef.current) === null || _a === void 0 ? void 0 : _a.call(callbackRef, ...args);\r\n    }, []);\r\n    useEffect(() => {\r\n        if (node) {\r\n            // Create an observer instance linked to the callback function\r\n            const observer = new ResizeObserver(handleResizeObserver);\r\n            // Start observing the target node for resizes\r\n            observer.observe(node, { box });\r\n            return () => {\r\n                observer.disconnect();\r\n            };\r\n        }\r\n        return noop;\r\n    }, [node, handleResizeObserver, box]);\r\n    const ref = useCallback((node) => {\r\n        setNode(node);\r\n    }, []);\r\n    return [ref];\r\n}\n\nexport { useResizeObserverRef };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAEhE,MAAMC,MAAM,GAAG;EACXC,GAAG,EAAE;AACT,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACC,QAAQ,EAAEC,OAAO,GAAGJ,MAAM,EAAE;EACtD,MAAM;IAAEC;EAAI,CAAC,GAAGG,OAAO;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,WAAW,GAAGV,MAAM,CAACM,QAAQ,CAAC;EACpCL,SAAS,CAAC,MAAM;IACZS,WAAW,CAACC,OAAO,GAAGL,QAAQ;EAClC,CAAC,CAAC;EACF,MAAMM,oBAAoB,GAAGV,WAAW,CAAC,CAAC,GAAGW,IAAI,KAAK;IAClD,IAAIC,EAAE;IACN,CAACA,EAAE,GAAGJ,WAAW,CAACC,OAAO,MAAM,IAAI,IAAIG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACL,WAAW,EAAE,GAAGG,IAAI,CAAC;EACjG,CAAC,EAAE,EAAE,CAAC;EACNZ,SAAS,CAAC,MAAM;IACZ,IAAIO,IAAI,EAAE;MACN;MACA,MAAMQ,QAAQ,GAAG,IAAIC,cAAc,CAACL,oBAAoB,CAAC;MACzD;MACAI,QAAQ,CAACE,OAAO,CAACV,IAAI,EAAE;QAAEJ;MAAI,CAAC,CAAC;MAC/B,OAAO,MAAM;QACTY,QAAQ,CAACG,UAAU,CAAC,CAAC;MACzB,CAAC;IACL;IACA,OAAOrB,IAAI;EACf,CAAC,EAAE,CAACU,IAAI,EAAEI,oBAAoB,EAAER,GAAG,CAAC,CAAC;EACrC,MAAMgB,GAAG,GAAGlB,WAAW,CAAEM,IAAI,IAAK;IAC9BC,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACY,GAAG,CAAC;AAChB;AAEA,SAASf,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}